<?xml version="1.0" encoding="UTF-8"?>
<class name="Snake" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors/>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">Act - do whatever the Snake wants to do. This method is called whenever the 'Act' or 'Run' button gets pressed in the environment.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="eat()" expression-java="eat()" enable="true"/>
                <call expression="moveAndTurn()" expression-java="moveAndTurn()" enable="true"/>
                <if condition="isTouching(Lobster.class)" condition-java="isTouching(Lobster.class)" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="(World)getWorld()" value-java="(World)getWorld()" enable="true"/>
                        <variable type="int" type-java="int" name="x" value="getX()" value-java="getX()" enable="true"/>
                        <variable type="int" type-java="int" name="y" value="getY()" value-java="getY()" enable="true"/>
                        <call expression="world.removeObject(this)" expression-java="world.removeObject(this)" enable="true"/>
                        <variable type="Lobster" type-java="Lobster" name="newLobster" value="new Lobster()" value-java=" new Lobster()" enable="true"/>
                        <call expression="world.addObject(newLobster,x,y)" expression-java="world.addObject(newLobster, x, y)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;eating.wav&quot;)" expression-java="Greenfoot.playSound(&quot;eating.wav&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="eat" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="lobster" value="getOneIntersectingObject(Lobster.class)" value-java="getOneIntersectingObject(Lobster.class)" enable="true"/>
                <if condition="lobster!=null" condition-java="lobster != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(lobster)" expression-java="world.removeObject(lobster)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;eating.wav&quot;)" expression-java="Greenfoot.playSound(&quot;eating.wav&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAndTurn" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="move(4)" expression-java="move(4)" enable="true"/>
                <if condition="Greenfoot.isKeyDown(&quot;left&quot;)" condition-java="Greenfoot.isKeyDown(&quot;left&quot;)" enable="true">
                    <ifStatements>
                        <call expression="turn(3)" expression-java="turn(3)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="Greenfoot.isKeyDown(&quot;right&quot;)" condition-java="Greenfoot.isKeyDown(&quot;right&quot;)" enable="true">
                    <ifStatements>
                        <call expression="turn(-3)" expression-java="turn(-3)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
    </methods>
</class>
